#include<bits/stdc++.h>
using namespace std;
# define d 256
const int q=101;
void RabinSearch(string pat,string txt,int M,int N)
{
	int h=1;
	for(int i=1;i<=M-1;i++)  //calculate h during multiplication
		h=(h*d)%q;
		
	int p=0,t=0;
	for(int i=0;i<M;i++)   //hash code for first time
	{
		p=(p*d+pat[i])%q;
		t=(t*d+txt[i])%q;
	}
	
	for(int i=0;i<=(N-M);i++)   //check char by char
	{
		if(p==t) 
		{
		bool flag=true;
		
		for(int j=0;j<M;j++)  // if not same
			if(txt[i+j] != pat[j])
				 {flag=false; break;}
				
		if(flag==true)
			cout<<i<<" ";
		}
		 if(i<N-M){
           t=((d*(t-txt[i]*h))+txt[i+M])%q;
        if(t<0)t=t+q;
		 }
	}
}
int main()
{
	string txt="GEEKS FOR GEEKS"; string pat="GEEK";
	cout<<"All index number where pattern found :"<<" ";
	RabinSearch(pat,txt,4,15);
	return 0;
}
// output= 0  10
